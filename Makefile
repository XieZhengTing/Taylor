FC              =    nvfortran
OPLEVEL         =   -O0 -g # 使用 -O0 關閉優化，-g 加入偵錯資訊
LDFLAGS := -lnetcdff -lexoIIv2for32 -lexodus -lnetcdf
EXDIR           =   /usr/local
EXDIRLIB        =   $(EXDIR)/lib
EXDIRINC        =   $(EXDIR)/include
NETCDFDIR       =   /usr/local
NETCDFDIRLIB    =   $(NETCDFDIR)/lib
NETCDFDIRINC    =   $(NETCDFDIR)/include

# 修正：明確指定 CUDA 11.8
FFLAGS  =   $(OPLEVEL)  $(EXSWITCH) -L $(EXDIRLIB) -I $(EXDIRINC) -I $(NETCDFDIRINC) -L $(NETCDFDIRLIB) -acc -gpu=mem:managed,cc75,cuda11.8 -Minfo=accel -Mextend

# 連結標誌也需要 OpenACC 設定
LINKFLAGS = -acc -gpu=mem:managed,cc75,cuda11.8 $(LDFLAGS)

SRCS1=$(wildcard *.f)
SRCS2=$(wildcard *.F)
SRCS3=$(wildcard *.F90)
SRCS4=$(wildcard *.f90)
OBJS1=$(SRCS1:.f=.o)
OBJS2=$(SRCS2:.F=.o)
OBJS3=$(SRCS3:.F90=.o)
OBJS4=$(SRCS4:.f90=.o)

# List all object files that provide modules
MODULE_PROVIDERS_OBJS = FINT_FUNCTIONS.o MODEL.o CONTROL.o INVERSE.o RK.o DETERMINANT.o \
                        CONSTITUTE_VONMISES.o CONSTITUTE_DRUCKPRAG.o CONSTITUTE_VISCOELASTIC.o \
                        CONSTITUTE_VONMISES_DAM.o HYPERELASTIC.o ESTIMATE_MODULI.o CONSTITUTION.o

# Combine all object files that would be generated by wildcard rules
ALL_WILDCARD_OBJS = $(OBJS4) $(OBJS3) $(OBJS2) $(OBJS1)

# Filter out the objects that are already explicitly listed as module providers
NON_MODULE_PROVIDER_OBJS = $(filter-out $(MODULE_PROVIDERS_OBJS), $(ALL_WILDCARD_OBJS))

# Use sort to ensure unique objects
OBJECTS = $(sort $(MODULE_PROVIDERS_OBJS) $(NON_MODULE_PROVIDER_OBJS))

EXECUTABLE = MEGA

all: $(EXECUTABLE)

# 修正：改用正確的輸出檔案名
CONTROL.o control.mod : CONTROL.F90
	$(FC) $(FFLAGS) -c $< -o CONTROL.o

FINT_FUNCTIONS.o fint_functions.mod : FINT_FUNCTIONS.F90
	$(FC) $(FFLAGS) -c $< -o FINT_FUNCTIONS.o

MODEL.o model.mod : MODEL.F90
	$(FC) $(FFLAGS) -c $< -o MODEL.o

# 修正：使用小寫模組名
INVERSE.o inverse_mod.mod : INVERSE.F90
	$(FC) $(FFLAGS) -c $< -o INVERSE.o

RK.o rk_procedures_mod.mod : RK.f90 inverse_mod.mod fint_functions.mod control.mod model.mod
	$(FC) $(FFLAGS) -c $< -o RK.o

DETERMINANT.o determinant_mod.mod : DETERMINANT.F90
	$(FC) $(FFLAGS) -c $< -o DETERMINANT.o

# Rules for material model files
CONSTITUTE_VONMISES.o constitute_vonmises_mod.mod : CONSTITUTE_VONMISES.F90 fint_functions.mod
	$(FC) $(FFLAGS) -c $< -o CONSTITUTE_VONMISES.o

CONSTITUTE_DRUCKPRAG.o constitute_druckprag_mod.mod : CONSTITUTE_DRUCKPRAG.F90 fint_functions.mod
	$(FC) $(FFLAGS) -c $< -o CONSTITUTE_DRUCKPRAG.o

CONSTITUTE_VISCOELASTIC.o constitute_viscoelastic_mod.mod : CONSTITUTE_VISCOELASTIC.F90 fint_functions.mod determinant_mod.mod inverse_mod.mod
	$(FC) $(FFLAGS) -c $< -o CONSTITUTE_VISCOELASTIC.o

CONSTITUTE_VONMISES_DAM.o constitute_vonmises_dam_mod.mod : CONSTITUTE_VONMISES_DAM.F90 fint_functions.mod
	$(FC) $(FFLAGS) -c $< -o CONSTITUTE_VONMISES_DAM.o

HYPERELASTIC.o hyperelastic_mod.mod : HYPERELASTIC.F90 fint_functions.mod determinant_mod.mod inverse_mod.mod
	$(FC) $(FFLAGS) -c $< -o HYPERELASTIC.o

ESTIMATE_MODULI.o estimate_moduli_mod.mod : ESTIMATE_MODULI.F90 fint_functions.mod model.mod control.mod
	$(FC) $(FFLAGS) -c $< -o ESTIMATE_MODULI.o

CONSTITUTION.o constitution_mod.mod : CONSTITUTION.F90 fint_functions.mod constitute_vonmises_mod.mod constitute_druckprag_mod.mod constitute_viscoelastic_mod.mod constitute_vonmises_dam_mod.mod hyperelastic_mod.mod
	$(FC) $(FFLAGS) -c $< -o CONSTITUTION.o

# 修正模組檔案名稱（使用小寫）
ALL_MOD_FILES = fint_functions.mod control.mod model.mod inverse_mod.mod rk_procedures_mod.mod determinant_mod.mod \
                constitute_vonmises_mod.mod constitute_druckprag_mod.mod constitute_viscoelastic_mod.mod \
                constitute_vonmises_dam_mod.mod hyperelastic_mod.mod estimate_moduli_mod.mod constitution_mod.mod

# Generic rules for compiling other Fortran files
%.o: %.f90 $(ALL_MOD_FILES)
	$(FC) $(FFLAGS) -c $< -o $@

%.o: %.F90 $(ALL_MOD_FILES)
	$(FC) $(FFLAGS) -c $< -o $@

%.o: %.F $(ALL_MOD_FILES)
	$(FC) $(FFLAGS) -c $< -o $@

%.o: %.f $(ALL_MOD_FILES)
	$(FC) $(FFLAGS) -c $< -o $@

# 修正：使用正確的連結選項，避免重複檔案
$(EXECUTABLE): $(OBJECTS)
	@echo "=== 連結 $(EXECUTABLE) ==="
	@echo "目標檔案數量: $(words $(OBJECTS))"
	$(FC) $(LINKFLAGS) $(OBJECTS) -o $(EXECUTABLE)

# 測試編譯
test-compile:
	@echo "=== 測試 CUDA 11.8 編譯 ==="
	$(FC) $(FFLAGS) -c CONTROL.F90 -o test_control.o
	@echo "CUDA 11.8 編譯成功！"
	@$(RM) test_control.o

clean:
	$(RM) $(EXECUTABLE)
	$(RM) *.o *.mod

.PHONY: all clean test-compile